{"version":3,"sources":["services/httpService.js","services/jobService.js","components/common/input.jsx","components/common/form.jsx","services/authService.js","components/loginForm.jsx","components/job.jsx","components/searchBar.jsx","components/pagination.jsx","components/jobsTable.jsx","components/navBar.jsx","components/profile.jsx","components/logout.jsx","components/NotFound.jsx","components/getJob.jsx","services/userService.js","components/registerForm.jsx","components/editProfile.jsx","components/createNewJob.jsx","services/languageAndtools.js","components/serviceNotAvailable.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","get","post","put","delete","setJwt","jwt","headers","common","jobUrl","id","saveJob","job","_id","body","http","Input","name","label","error","className","rest","classes","htmlFor","Form","state","data","img","errors","file","uploadedFile","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","console","log","onChange","target","files","filename","onSubmit","a","formData","FormData","append","res","fileName","filePath","response","status","renderUploadImg","enctype","type","required","for","onClick","src","alt","classN","this","Component","login","email","password","localStorage","setItem","logout","window","removeItem","user","apiEndpoint","getJwt","getItem","getCurrentUser","jwtDecode","ex","loginWithJwt","editProfile","LoginForm","username","string","auth","props","location","from","pathname","to","renderInput","renderButton","Job","badge_new","badge_featured","language","tool","new","featured","languagesId","map","key","toolsId","Fragment","logo","company","position","postedAt","contract","SearchBar","items","length","onDelete","onClear","Pagination","postsPerPage","totalPosts","paginate","currentPage","pagesCount","Math","ceil","pageNumbers","_","range","number","href","current","JobsTable","selected","handleClick","option","includes","innerText","toast","concat","filter","toolsAndLanguages","handleDelete","originalSelected","i","handleClear","pageNumber","indexOfLastPost","indexOfFirstPost","currentPosts","slice","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","class","aria-haspopup","aria-labelledby","Profile","loading","refreshPage","reload","Logout","NotFound","objectid","history","replace","match","jobId","role","register","RegisterForm","min","userService","push","EditProfile","newUser","newValue","disabled","tabindex","aria-hidden","data-dismiss","createNewJob","languages","tools","countries","level","imageUrl","any","array","onChangeFile","event","handleSelectLanguage","languageId","find","lan","l","result","onValueChange","handleSelectTool","toolId","Submit","Countries","findAll","country","official","indexOf","ServiceNotAvailable","goBack","App","component","render","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9c0a7a01.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3900/'\r\n\r\n\r\nfunction setJwt(jwt) {\r\n    axios.defaults.headers.common['x-auth-token'] = jwt\r\n}\r\n  \r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n}","import http from './httpService';\r\n\r\nconst apiEndpoint = '/api/jobs';\r\nfunction jobUrl(id){\r\n    return `${apiEndpoint}/${id}`\r\n}\r\n\r\nexport function getJobs() {\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getJob(jobId){\r\n    return http.get(jobUrl(jobId));\r\n}\r\n\r\nexport function saveJob(job){\r\n    if(job._id){\r\n        const body = {...job};\r\n        delete body._id;\r\n        return http.put(jobUrl(job._id), body)\r\n    }\r\n    return http.post(apiEndpoint, job)\r\n}\r\nexport function deleteJob(jobId) {\r\n    return http.delete(jobUrl(jobId));\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst Input = ({ name, label, error,className ,...rest }) => {\r\n    const classes = className + ' form-control'\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                {...rest}\r\n                name={name}\r\n                id={name} \r\n                className={classes}\r\n            />\r\n            {error && <div className=\"error mt-1\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Input;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport axios from 'axios';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        data: { img: '' },\r\n        errors: { img: '' },\r\n        file: '',\r\n        uploadedFile: {}\r\n    };\r\n    validate = () => {\r\n        const options = { abortEarly: false }\r\n        const { error } = Joi.validate(this.state.data, this.schema, options)\r\n        if(!error) return null;\r\n\r\n        const errors = {};\r\n        for( let item of error.details )\r\n            errors[item.path[0]] = item.message\r\n        return errors\r\n    }\r\n\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] }\r\n        const {error} = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null\r\n    \r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if(errors) return;\r\n\r\n        this.doSubmit()\r\n    }\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = {...this.state.errors};\r\n        console.log(\"HELLO WORLD\")\r\n        const data = {...this.state.data};\r\n        data[input.name] = input.value;\r\n        this.setState({ data, errors })\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({file :e.target.files[0]});\r\n        this.setState({filename: e.target.files[0].name})\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', this.state.file);\r\n        \r\n\r\n        try{\r\n            const res = await axios.post('http://localhost:3900/api/users/upload', formData, { \r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n             });\r\n            const { fileName, filePath } = res.data;\r\n            const data = {...this.state.data};\r\n            data['img'] = filePath;\r\n            this.setState({data});\r\n            this.setState({uploadedFile: { fileName, filePath }})\r\n            this.setState({ errors: { img: '' } });\r\n        }\r\n        catch(err){\r\n            if(err.response.status === 500) {\r\n                console.log('There was a problem with the server')\r\n            }else{\r\n                console.log(err.response.data);\r\n                this.setState({ errors: { img: 'Image Not uploaded.' } })\r\n            }\r\n        }\r\n    }\r\n    renderButton(label, className){\r\n        const classN = className + ' btn btn-primary'\r\n        return(\r\n        <button\r\n            type=\"submit\"\r\n            className={classN}\r\n        >{label}</button>\r\n        )\r\n    } \r\n    renderInput(name, label, type = 'text', className) {\r\n        const { data, errors } = this.state;\r\n\r\n        return (\r\n            <Input \r\n                type={type}\r\n                onChange={this.handleChange} \r\n                name={name} \r\n                label={label} \r\n                value={data[name]} \r\n                error={errors[name]}\r\n                className={className}\r\n            />\r\n            \r\n        )\r\n    }\r\n    renderUploadImg = () => {\r\n        return (\r\n            <Fragment>\r\n                <form className=\"svp\" enctype=\"multipart/form-data\">\r\n                    <div className=\"custom-file mb-4\">\r\n                        <input type='file' name=\"img\" className=\"custom-file-input\" id=\"validatedCustomFile\" required onChange={this.onChange}  />\r\n                        <label className=\"custom-file-label\" for=\"customFile\">\r\n                            {this.state.filename}\r\n                        </label>\r\n                        <button onClick={this.onSubmit} id=\"customFile\" className=\"btn btn-primary btn-block mt-2\">Submit</button>\r\n                    </div>\r\n                    {this.state.uploadedFile ? (\r\n                        <div className='mt-1'>\r\n                            <img id=\"uploaded-img\" src={this.state.uploadedFile.filePath} alt='' />\r\n                        </div>\r\n                    ) : null}\r\n                </form>\r\n                    {this.state.errors.img && <div className=\"error mt-1\">{this.state.errors.img}</div>}\r\n            </Fragment>\r\n        )\r\n    }\r\n    \r\n}\r\n \r\nexport default Form;\r\n","import http from './httpService';\r\nimport jwtDecode from 'jwt-decode';\r\nconst tokenKey = 'token';\r\nconst apiEndpoint = '/api/auth';\r\n\r\nhttp.setJwt(getJwt())\r\n\r\nexport async function login(email, password){\r\n    try{\r\n        const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n        localStorage.setItem(tokenKey, jwt);\r\n    }\r\n    catch(ex){\r\n        if(ex.response && ex.response.status === 400){\r\n            return (ex.response.data);\r\n        }\r\n    }\r\n}\r\n\r\nexport function loginWithJwt(jwt){\r\n    window.localStorage.setItem(tokenKey, jwt)\r\n}\r\n\r\nexport function logout(){\r\n    window.localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser(){\r\n    try{\r\n        const jwt = window.localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt)\r\n    }\r\n    catch(ex){\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function editProfile(user){\r\n    const { data } = await http.put(apiEndpoint+'/edit', { \r\n        name: user.name,\r\n        email: user.email,\r\n        password: user.password\r\n    })\r\n    logout();\r\n    login(user.email, user.password);\r\n    return data;\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(tokenKey)\r\n}\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    loginWithJwt,\r\n    editProfile,\r\n    getJwt\r\n}","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\nimport { Redirect, NavLink } from 'react-router-dom';\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data: { username: '', password: '' },\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string().required().  label('Username'),\r\n        password: Joi.string().required().label(\"Password\")\r\n    };\r\n\r\n    doSubmit = async () => {       \r\n        try{\r\n            const { username, password } = this.state.data;\r\n            await auth.login(username, password);\r\n            const { state } = this.props.location \r\n            window.location = state ? state.from.pathname : \"/jobs\";\r\n        }\r\n        catch(ex){\r\n            if(ex.response && ex.response.status === 400){\r\n                const errors = { ...this.state.errors };\r\n                errors.username = ex.response;\r\n                this.setState({ errors })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if(auth.getCurrentUser()) return <Redirect to='/user' />\r\n            return (\r\n            <div className=\"register-login\">\r\n                <div className=\"login-form-primary\">\r\n                    <h1 className=\"primary-text\" id=\"login\">Login</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        {this.renderInput('username', 'Username', 'text', \"login-form-username login-form\")}\r\n                        {this.renderInput('password', 'Password', 'password', \"login-form-password login-form\")}\r\n                        {this.renderButton(\"Login\", \"login-button register-button\")}\r\n                    </form>\r\n                    <NavLink className=\"pass-reset\" to=\"/service-not-available\">Forgot Password?</NavLink>\r\n                </div>\r\n            </div> \r\n            );\r\n    }\r\n}\r\n\r\nexport default LoginForm","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nclass Job extends Component {\r\n    render() {\r\n        let badge_new;\r\n        let badge_featured;\r\n        let language;\r\n        let tool;\r\n        let job_classes = \"job row\";\r\n        if (this.props.job.new){\r\n            badge_new = <h5 className=\"badge new\">New!</h5>\r\n        }else{\r\n            badge_new = ''\r\n        }\r\n        if (this.props.job.featured){\r\n            badge_featured = <h5 className=\"badge featured\">Featured</h5>\r\n            job_classes = \"job row job-featured\"\r\n        }else{\r\n            badge_featured = ''\r\n        }\r\n        if(this.props.job.languagesId){\r\n            language = this.props.job.languagesId.map(language => <p className=\"badge-main\" onClick={this.props.onClick} key={language.name}>{language.name}</p>)\r\n        }\r\n        if(this.props.job.toolsId){\r\n            tool = this.props.job.toolsId.map(tool => <p key={tool.name} onClick={this.props.onClick} className=\"badge-main\">{tool.name}</p>)\r\n        }\r\n        return ( \r\n            <React.Fragment>\r\n                <div  className=\"job\">\r\n                        <NavLink to={`/${this.props.job._id}`} className=\"col-1\">\r\n                            <img src={this.props.job.logo} alt=\"logo\" id=\"logo\" />\r\n                        </NavLink>\r\n                        <div className=\"job-main col-6\">\r\n                            <div className=\"job-upper\">\r\n                                <p className=\"company\">{this.props.job.company}</p>\r\n                                <div className=\"badges-1\">\r\n                                    {badge_new}\r\n                                    {badge_featured}\r\n                                </div>\r\n                            </div>\r\n                            <NavLink to={`/${this.props.job._id}`} className=\"job-mid\">\r\n                                <h3 className=\"position\">{this.props.job.position}</h3>\r\n                            </NavLink>\r\n                            <div className=\"job-bot\">\r\n                                <p className=\"common\">{this.props.job.postedAt}</p>\r\n                                <p className=\"point\">•</p>\r\n                                <p className=\"common\">{this.props.job.contract}</p>\r\n                                <p className=\"point\">•</p>\r\n                                <p className=\"common\">{this.props.job.location}</p>\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"badges col-4\">\r\n                        {language}\r\n                        {tool}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );            \r\n    }\r\n}\r\n \r\nexport default Job;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass SearchBar extends Component {\r\n    state = {  }\r\n\r\n    render() { \r\n        let classes;\r\n        if(this.props.items.length < 1) {\r\n            classes = \"none\" \r\n        }else{\r\n            classes = \"searchBar\"\r\n        }\r\n        return ( \r\n            <div className={classes}>\r\n                {this.props.items.map(item => (\r\n                    <div className=\"selected-item row\" key={item}>\r\n                        <h5 className=\"selected-text \">{item}</h5>\r\n                        <button className=\"undo\" onClick={() => this.props.onDelete(item)}><i className=\"fas fa-times\"></i></button>\r\n                    </div>\r\n                ))}\r\n                <button className=\"clear\" onClick={this.props.onClear} >Clear</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SearchBar;","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({postsPerPage, totalPosts, paginate, currentPage}) => {\r\n    const pagesCount = Math.ceil(totalPosts.length / postsPerPage);\r\n    // for(let i = 1; i < Math.ceil(totalPosts.length / postsPerPage); i++){\r\n    //     pageNumbers.push(i);\r\n    // }\r\n    if(pagesCount === 1) return null;\r\n    const pageNumbers = _.range(1, pagesCount + 1);\r\n\r\n    console.log(pageNumbers);\r\n\r\n    return (\r\n        <nav className=\"pagination mb-5\">\r\n            {pageNumbers.map(number => (\r\n                <li key={number} className={ number === currentPage? 'page-item active' : 'page-item'}>\r\n                    <a onClick={() => paginate(number)} href=\"#\" current className=\"page-link\">{number}</a>\r\n                </li>\r\n            ))}\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default Pagination;","import React, { Component } from 'react';\r\nimport Job from './job';\r\nimport SearchBar from './searchBar';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Pagination from './pagination';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass JobsTable extends Component {\r\n    state = { \r\n        selected: [],\r\n        currentPage: 1,\r\n        postsPerPage: 2,\r\n    }\r\n\r\n    \r\n\r\n    handleClick = (option) => {\r\n        if(this.state.selected.includes(option.target.innerText)){\r\n          toast.error('Cannot add same item 2 times.')\r\n        }else if(this.state.selected.length >= 5){\r\n          toast.error('Cannot add more than 5 items.')\r\n        }else{\r\n          this.setState({\r\n            selected: this.state.selected.concat([option.target.innerText])\r\n          })\r\n          let data = this.props.data.filter(selected => selected.toolsAndLanguages.includes(option.target.innerText))\r\n          this.setState({data})\r\n        } \r\n    }\r\n    handleDelete = async (item) => {\r\n      const originalSelected = [...this.state.selected];\r\n      const selected = originalSelected.filter(i => i !== item);\r\n      this.setState({selected});\r\n    }\r\n    handleClear = async () => {\r\n      const { data } = this.props.data;\r\n      const selected = [];\r\n      this.setState({selected});\r\n      this.setState({data});\r\n    }\r\n\r\n    paginate = (pageNumber) => {\r\n      this.setState({ currentPage: pageNumber})\r\n    }\r\n    render() { \r\n      const { currentPage, postsPerPage } = this.state;\r\n      const indexOfLastPost = currentPage * postsPerPage;\r\n      const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n      const currentPosts = this.props.data.slice(indexOfFirstPost, indexOfLastPost);\r\n        return ( \r\n        <div className=\"container\">\r\n            <SearchBar items={this.state.selected} onDelete={this.handleDelete} onClear={this.handleClear}/>\r\n            {this.props.user && (\r\n              <NavLink to=\"/create-new-job\" className=\"btn btn-primary mt-5 create-new-job-button\">Create New Job</NavLink>\r\n            )}\r\n            {currentPosts.map(job => (\r\n            <Job job={job} key={job.id} onClick={this.handleClick}/>\r\n            ))}\r\n            <Pagination \r\n              postsPerPage={postsPerPage} \r\n              totalPosts={this.props.data} \r\n              paginate={this.paginate} \r\n              currentPage={currentPage} \r\n            />\r\n        </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default JobsTable;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n \r\nconst NavBar = ({ user }) => {\r\n    return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n      <div className=\"navbar-nav\">\r\n        <NavLink className=\"nav-item nav-link active\" to=\"/jobs\">Jobs <span className=\"sr-only\">(current)</span></NavLink>\r\n        {!user && (\r\n        <React.Fragment>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/login\">Login</NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/register\">Register</NavLink>\r\n        </React.Fragment>\r\n        )}\r\n        {user && (\r\n          \r\n        <React.Fragment>\r\n          <div class=\"dropdown\">\r\n            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              {user.name}\r\n            </button>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <NavLink className=\"nav-item nav-link\" to=\"/user\">Profile</NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/edit\">Edit Profile</NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">Logout</NavLink>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Profile extends Component {\r\n    state = { \r\n        user: {},\r\n        loading: false,\r\n     }\r\n    async componentDidMount() {\r\n        const user = auth.getCurrentUser();\r\n        this.setState({user});\r\n        this.setState({ loading: false });\r\n    }\r\n    refreshPage = () => {\r\n        window.location.reload(true);\r\n    }\r\n    render() { \r\n        const { loading } = this.state;\r\n    \r\n        if(loading) { \r\n            return null;\r\n        }\r\n        return ( \r\n            <div className=\"container mt-5\">\r\n                <div className=\"img-div\">\r\n                 <img src={this.state.user.img} id=\"profile-img\" alt=\"profile\" />\r\n                </div>\r\n                <h1 className=\"sec-text sm m-4\">Name: {this.state.user.name}</h1>\r\n                <h1 className=\"sec-text sm m-4\">Email: {this.state.user.email}</h1>\r\n                <NavLink to=\"/edit\" className=\"btn btn-primary ml-4\">Edit Profile</NavLink>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Profile;","import { Component } from 'react';\r\nimport auth from '../services/authService'\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        auth.logout()\r\n        window.location = '/jobs';\r\n    }\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <h1 className=\"error-text\">404 Error Page Not Found</h1> \r\n    );\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nimport { getJob } from '../services/jobService';\r\nimport NotFound from './NotFound';\r\n\r\nclass Job extends Component {\r\n    state = { \r\n        data: {},\r\n        objectid: false,\r\n        loading: true\r\n     }\r\n     async componentDidMount() {\r\n         const user = auth.getCurrentUser();\r\n         this.setState({user});\r\n         let {pathname} = this.props.location;\r\n         pathname = pathname.slice(1);\r\n\r\n         if (pathname.match(/^[0-9a-fA-F]{24}$/)) {\r\n            const { data } = await getJob(pathname);\r\n            this.setState({data});\r\n            this.setState({objectid: true})\r\n        } else {\r\n            this.setState({objectid: false});\r\n        }\r\n        this.setState({ loading: false });\r\n    }\r\n    handleClick = () => {\r\n        this.props.history.replace('/jobs');\r\n    }\r\n    render() { \r\n        const { loading } = this.state;\r\n    \r\n        if(loading) { \r\n            return null;\r\n        }\r\n        return ( \r\n            this.state.objectid === true ? (\r\n                <div className=\"m-4\">\r\n                    <div className=\"job-table\">\r\n                        <img src={this.state.data.logo} alt=\"logo\" className=\"m-2\" id=\"get-job-img\"/>\r\n                        <h1 className=\"primary-text m-2\">{this.state.data.company}</h1>\r\n                        <p className=\"sec-text m-2\">Position: {this.state.data.position}</p>\r\n                        <p className=\"sec-text m-2\">Role: {this.state.data.role}</p>\r\n                        <p className=\"sec-text m-2\">Contract: {this.state.data.contract}</p>\r\n                        <p className=\"sec-text m-2 row languages-and-tools\">Languages And Tools:{this.state.data.toolsAndLanguages && (\r\n                        this.state.data.toolsAndLanguages.map(language => (\r\n                                <p className=\"badge-main m-2\" id=\"page-badges\" onClick={this.handleClick}>{language}</p>\r\n                        )))} </p>\r\n                    </div>\r\n                </div>\r\n            ) : window.location = '/not-found'\r\n        \r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default Job;","import http from './httpService';\r\n\r\nconst apiEndpoint = '/api/users';\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, {\r\n        email: user.username,\r\n        img: user.img,\r\n        password: user.password,\r\n        name: user.name\r\n    })\r\n}\r\n\r\nexport default {\r\n    register\r\n}","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\nimport userService from '../services/userService';\r\nimport { Redirect  } from 'react-router-dom';\r\n\r\nclass RegisterForm extends Form {\r\n    state = { \r\n        data: { username: '', password: '', name: '', img: '' },\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string().required().email().label('Username'),\r\n        password: Joi.string().required().min(5).label(\"Password\"),\r\n        img: Joi.string().label('Image'),\r\n        name: Joi.string().required().label(\"Name\")\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        try{\r\n            const response = await userService.register(this.state.data)\r\n            auth.loginWithJwt(response.headers['x-auth-token']);\r\n            this.props.history.push('/jobs');\r\n        }\r\n        catch(ex){\r\n            if(ex.response){\r\n                const errors = { ...this.state.errors };\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() { \r\n        if(auth.getCurrentUser()) return <Redirect to='/jobs' />\r\n            return (\r\n            <div className=\"register-login\">\r\n                <div className=\"login-form-primary\">\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        {this.renderInput('username', \"Username\", 'text', \"login-form-username login-form\")}\r\n                        {this.renderInput('password', \"Password\", 'password', \"login-form-password login-form\")}\r\n                        {this.renderInput('name', \"Name\", 'text', 'login-form login-form-name')}\r\n                        <label htmlFor=\"image\">Image</label>\r\n                        {this.renderUploadImg()}\r\n                        {this.renderButton('Register', \"login-button register-button mb-5\")}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default RegisterForm","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nimport Joi from 'joi-browser';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass EditProfile extends Component {\r\n    state = { \r\n        user: {},\r\n        errors: {},\r\n        newUser: {}\r\n    }\r\n    async componentDidMount() {\r\n        const user = await auth.getCurrentUser();\r\n        const username = user.name;\r\n        const email = user.email;\r\n        this.setState({user: { name: username, email }});\r\n    }\r\n\r\n    schema = {\r\n        email: Joi.string().required().email().label('Email'),\r\n        img: Joi.string().label('Image'),\r\n        password: Joi.string().label('Password'),\r\n        name: Joi.string().required().label(\"Name\")\r\n    }\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false }\r\n        const { error } = Joi.validate(this.state.user, this.schema, options)\r\n        if(!error) return null;\r\n        const errors = {};\r\n        for(let i = 0; i < error.details.length; i++){\r\n            errors[error.details[i].path[0]] = error.details[i].message;\r\n        }\r\n        console.log(errors);\r\n        return errors\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if(errors) return;\r\n\r\n        this.doSubmit()\r\n    }\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const {error} = Joi.validate(obj,schema);\r\n        return error ? error.details[0].message : null\r\n    }\r\n    doSubmit = async () => {\r\n        try{\r\n            console.log(this.state.user);\r\n            await auth.editProfile(this.state.user);\r\n            this.props.history.push('/jobs');\r\n            window.location.reload();\r\n        }\r\n        catch(ex){\r\n            if(ex.response && ex.response.status === 400){\r\n                toast.error('Password Is Incorect');\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    onChange = e => {\r\n        const errors = {...this.state.errors};\r\n\r\n        let newValue = e.target.value;\r\n        const user = {...this.state.user}\r\n        user[e.target.name] = newValue;\r\n        this.setState({ user, errors })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label className=\"mt-2\" id=\"basic-addon1\">Name</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"name\" onChange={this.onChange} value={this.state.user.name}/>\r\n                    <label className=\"mt-2\" id=\"basic-addon1\">Email</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"email\" disabled value={this.state.user.email}/>\r\n                    <button type=\"button\" class=\"btn btn-primary mt-2\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                        Save\r\n                    </button>\r\n                    <div className=\"modal fade show\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Password Verification</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <label className=\"mt-2\">Enter Your Password</label>\r\n                                <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.onChange} />\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default EditProfile;","import React, { Component } from 'react';\r\nimport { saveJob } from '../services/jobService';\r\nimport { getLanguages, getTools } from '../services/languageAndtools';\r\nimport Joi from 'joi-browser';\r\nimport Countries from 'countries-api';\r\nimport auth from '../services/authService';\r\nimport axios from 'axios';\r\n\r\n\r\nclass createNewJob extends Component {\r\n    state = {\r\n        languages: [],\r\n        tools: [],\r\n        countries: [],\r\n        data: { \r\n            position: null,\r\n            logo: null, \r\n            company: null,\r\n            role: null, \r\n            contract: null, \r\n            level: null, \r\n            toolsId: [], \r\n            languagesId: [], \r\n            location: null, \r\n        },\r\n        imageUrl: null,\r\n        errors: {}      \r\n    }\r\n\r\n    schema = {\r\n        position: Joi.string().required().label(\"Position\"),\r\n        logo: Joi.any().required().label(\"Company Logo\"),\r\n        company: Joi.string().required().label(\"Company\"),\r\n        role: Joi.string().required().label(\"Role\"),\r\n        contract: Joi.string().required().label(\"Contract\"),\r\n        level: Joi.string().required().label(\"Level\"),\r\n        location: Joi.string().required().label(\"Country\"),\r\n        languagesId: Joi.array().label(\"Languages\"),\r\n        toolsId: Joi.array().label(\"Tools\"),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data: tools } = await getTools();\r\n        const { data: languages } = await getLanguages();\r\n        const { data: countries } = Countries.findAll();\r\n        this.setState({ tools, languages, countries });\r\n    }\r\n\r\n\r\n\r\n    onChangeFile = event => {\r\n        let data = this.state.data;\r\n        data['logo'] = event.target.files[0];\r\n        this.setState({ data })\r\n    }\r\n    handleSelectLanguage = (e) => {\r\n        const language = e.target.innerText;\r\n        let data = this.state.data;\r\n        const languageId = this.state.languages.find(lan => lan.name === language);\r\n        if(!data['languagesId'].includes(languageId._id)){\r\n            data['languagesId'] = data.languagesId.concat(languageId._id);\r\n        }else{\r\n            data['languagesId'] = data.languagesId.filter(l => languageId._id !== l);\r\n        }\r\n        console.log(this.state.data.languagesId);\r\n        this.setState({ data });\r\n    }\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false };\r\n        const result = Joi.validate(this.state.data, this.schema, options);\r\n        if (!result.error) return null; \r\n        const errors = {};\r\n            for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\r\n        return errors;\r\n    };\r\n    \r\n    onValueChange = (e) => {\r\n        const data = {...this.state.data};\r\n        const errors = {...this.state.data};\r\n        \r\n        data[e.target.name] = e.target.value;\r\n        const error = this.validate();\r\n        this.setState({errors: error});\r\n        this.setState({data});\r\n    }\r\n\r\n    \r\n    handleSelectTool = (e) => {\r\n        const tool = e.target.innerText;\r\n        let data = this.state.data;\r\n        const toolId = this.state.tools.find(to => to.name === tool);\r\n        if(!data['toolsId'].includes(toolId._id)){\r\n            data['toolsId'] = data.toolsId.concat(toolId._id);\r\n        }else{\r\n            data['toolsId'] = data.toolsId.filter(l => toolId._id !== l._id);\r\n        }\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const data = { ...this.state.data };\r\n        data[\"location\"] = e.target.value;\r\n        this.setState({ data })\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        console.log(errors);\r\n        console.log(this.state.data);\r\n        if (errors) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', this.state.data.logo);\r\n\r\n        try{\r\n            const res = await axios.post('http://localhost:3900/api/jobs/upload', formData, { \r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n             });\r\n            const { fileName, filePath } = res.data;\r\n            const data = {...this.state.data};\r\n            data['logo'] = filePath;\r\n            this.setState({data});\r\n            this.setState({ errors: { img: '' } });\r\n        }\r\n        catch(err){\r\n            if(err.response.status === 500) {\r\n                console.log('There was a problem with the server')\r\n            }else{\r\n                console.log(err.response.data);\r\n                this.setState({ errors: { img: 'Image Not uploaded.' } })\r\n            }\r\n        }\r\n\r\n        this.Submit()\r\n    }\r\n    Submit = async () => {\r\n        try{\r\n            const data = await saveJob(this.state.data);\r\n            console.log(data);\r\n        }\r\n        catch(ex){\r\n            if(ex.response){\r\n                console.log(ex.response);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const { errors, data } = this.state;\r\n        if(auth.getCurrentUser()){\r\n            return(\r\n            <div className=\"container new-job mt-5 mb-5\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label className=\"col-form-label\">Position</label>\r\n                    <input type=\"text\" onChange={this.onValueChange} name=\"position\" className=\"form-control\" />\r\n                    {errors.position && <div className=\"error mt-1\">{errors.position}</div>}\r\n                        <label className=\"col-form-label\">Company Logo</label>\r\n                    <form onSubmit={this.handleSubmit} class=\"custom-file mt-1\">\r\n                        <input type=\"file\" class=\"custom-file-input\" onChange={this.onChangeFile} name=\"logo\" id=\"validatedCustomFile\" required />\r\n                        <label class=\"custom-file-label\" for=\"validatedCustomFile\">{data.logo && data.logo.name}</label>\r\n                        {errors.logo && <div className=\"error mt-1\">{errors.logo}</div>}\r\n                    </form>\r\n                    <label className=\"col-form-label mt-4\">Company</label>\r\n                    <input type=\"text\" onChange={this.onValueChange} name=\"company\" className=\"form-control\"/> \r\n                    {errors.company && <div className=\"error mt-1\">{errors.company}</div>}\r\n                    <label className=\"col-form-label\">Role</label>\r\n                    <input type=\"text\" onChange={this.onValueChange} name=\"role\" className=\"form-control\" />\r\n                    {errors.role && <div className=\"error mt-1\">{errors.role}</div>}\r\n                    <label className=\"col-form-label\">Contract</label>\r\n                    <input type=\"text\" onChange={this.onValueChange} name=\"contract\" className=\"form-control\" />\r\n                    {errors.contract && <div className=\"error mt-1\">{errors.contract}</div>}\r\n                    <label className=\"col-form-label\">Level</label>\r\n                    <input type=\"text\" onChange={this.onValueChange} name=\"level\" className=\"form-control\" />\r\n                    {errors.level && <div className=\"error mt-1\">{errors.level}</div>}\r\n                    <select onChange={this.handleChange}class=\"custom-select mt-3\">\r\n                        <option selected disabled>Select Country</option>\r\n                        <option>Global</option>\r\n                        {this.state.countries.map(country => (\r\n                            <option value={country.name.official}>{country.name.official}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <label className=\"col-form-label mt-4\">Languages</label>\r\n                        {this.state.languages.map( language => (    \r\n                        <div class=\"custom-control custom-checkbox ml-3\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id={this.state.languages.indexOf(language)}/>\r\n                                <label class=\"custom-control-label\" onClick={this.handleSelectLanguage} for={this.state.languages.indexOf(language)}>{language.name}</label>\r\n                        </div>\r\n                        ))}\r\n                    <label className=\"col-form-label mt-4\">Tools</label>\r\n                        {this.state.tools.map( tool => \r\n                        (    \r\n                        <div class=\"custom-control custom-checkbox ml-3\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id={this.state.tools.indexOf(tool) + 100}/>\r\n                                <label class=\"custom-control-label\" onClick={this.handleSelectTool} for={this.state.tools.indexOf(tool) + 100}>{tool.name}</label>\r\n                        </div>\r\n                        ))}\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-3\"/>\r\n                </form>\r\n            </div>\r\n         );\r\n        }else{\r\n            window.location = '/not-found';\r\n        }\r\n    }\r\n}\r\n \r\nexport default createNewJob;","import http from './httpService';\r\n\r\n\r\nconst lanEndpoint = '/api/languages';\r\nconst toolEnpoint = '/api/tools'\r\n\r\n\r\nexport function getTools() {\r\n    return http.get(toolEnpoint);\r\n}\r\n\r\n\r\n\r\nexport function getLanguages() {\r\n    return http.get(lanEndpoint);\r\n}","import React, { Component } from 'react';\r\n\r\nconst ServiceNotAvailable = (props) => {\r\n    const handleClick = () => {\r\n        props.history.goBack();\r\n\r\n    }\r\n    return (\r\n        <div className=\"col text-center\">\r\n            <h1 className=\"error-text\">Service not Available yet</h1>\r\n            <button className=\"btn btn-primary text-center\" onClick={handleClick}>Go Back</button>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ServiceNotAvailable;","import React, { Component } from 'react';\nimport './App.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { getJobs } from './services/jobService'; \nimport LoginForm from './components/loginForm';\nimport JobsTable from './components/jobsTable';\nimport NavBar from './components/navBar';\nimport Profile from './components/profile';\nimport Logout from './components/logout';\nimport Job from './components/getJob';\nimport RegisterForm from './components/registerForm';\nimport EditProfile from './components/editProfile';\nimport createNewJob from './components/createNewJob';\nimport ServiceNotAvailable from './components/serviceNotAvailable';\nimport NotFound from './components/NotFound';\nimport auth from './services/authService';\n\nclass App extends Component {\n  state = { \n    data: []\n   }\n\n   async componentDidMount() {\n     const { data } = await getJobs();\n     this.setState({data})\n     const user = auth.getCurrentUser();\n     this.setState({user});\n   }\n  \n  render() { \n    const { data, user } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar user={user}/>\n        <div className=\"bg\"></div>\n        <ToastContainer />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/jobs\" render={props => <JobsTable {...props} data={data} user={user}/>} />\n            <Route path=\"/user\" component={Profile} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/edit\" component={EditProfile} />\n            <Route path=\"/service-not-available\" component={ServiceNotAvailable} />\n            <Route path=\"/create-new-job\" component={createNewJob} />\n            <Route path=\"/not-found\" component={NotFound}/>\n            <Route path=\"/:id\" component={Job}/>\n            <Redirect from=\"/\" exact to=\"/jobs\" />\n            <Redirect to=\"/not-found\"/>\n          </Switch>\n        </div> \n      </React.Fragment>\n    );\n  }\n}\n \nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}