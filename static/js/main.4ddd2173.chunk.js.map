{"version":3,"sources":["services/httpService.js","services/jobService.js","components/common/input.jsx","components/common/form.jsx","services/authService.js","components/loginForm.jsx","components/job.jsx","components/searchBar.jsx","components/pagination.jsx","components/jobsTable.jsx","components/navBar.jsx","components/profile.jsx","components/logout.jsx","components/getJob.jsx","services/userService.js","components/registerForm.jsx","components/editProfile.jsx","components/createNewJob.jsx","services/languageAndtools.js","components/UploadImgTest.jsx","components/serviceNotAvailable.jsx","components/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","process","get","post","put","delete","setJwt","jwt","headers","common","jobUrl","id","getJob","jobId","http","saveJob","job","_id","body","Input","name","label","error","className","rest","classes","htmlFor","Form","state","data","errors","file","uploadedFile","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","console","log","onChange","files","target","reader","FileReader","readAsDataURL","onload","result","renderUploadImg","type","image","src","alt","img","classN","this","Component","email","password","a","localStorage","setItem","user","apiEndpoint","getJwt","getItem","login","logout","window","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","editProfile","getUser","LoginForm","username","string","required","min","auth","props","location","from","pathname","response","status","to","onSubmit","renderInput","renderButton","Job","badge_new","badge_featured","language","tool","new","featured","languagesId","map","onClick","key","toolsId","Fragment","logo","company","position","postedAt","contract","SearchBar","items","length","onDelete","onClear","Pagination","postsPerPage","totalPosts","paginate","currentPage","pagesCount","Math","ceil","pageNumbers","_","range","number","current","JobsTable","selected","handleClick","option","includes","innerText","toast","concat","filter","toolsAndLanguages","handleDelete","originalSelected","i","handleClear","pageNumber","indexOfLastPost","indexOfFirstPost","currentPosts","slice","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","class","aria-haspopup","aria-labelledby","Profile","loading","color","Logout","history","replace","match","params","mapToViewModel","role","level","objectid","register","RegisterForm","userService","push","EditProfile","reload","newValue","onFileChange","disabled","tabindex","aria-hidden","data-dismiss","createNewJob","languages","tools","countries","imageUrl","any","array","onChangeFile","handleSelectLanguage","languageId","find","lan","l","onValueChange","handleSelectTool","toolId","Submit","Countries","findAll","country","official","indexOf","for","UploadImgTest","warn","enctype","ServiceNotAvailable","goBack","NotFound","dotenv","config","App","component","render","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4ddd2173.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\n\r\n\r\nfunction setJwt(jwt) {\r\n    axios.defaults.headers.common['x-auth-token'] = jwt\r\n}\r\n  \r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n}","import http from './httpService';\r\n\r\nconst apiEndpoint = '/jobs';\r\nfunction jobUrl(id){\r\n    return `${apiEndpoint}/${id}`\r\n}\r\n\r\nexport function getJobs() {\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getJob(jobId){\r\n    return http.get(jobUrl(jobId));\r\n}\r\n\r\nexport function saveJob(job){\r\n    if(job._id){\r\n        const body = {...job};\r\n        delete body._id;\r\n        return http.put(jobUrl(job._id), body)\r\n    }\r\n    return http.post(apiEndpoint, job)\r\n}\r\nexport function deleteJob(jobId) {\r\n    return http.delete(jobUrl(jobId));\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst Input = ({ name, label, error ,className ,...rest }) => {\r\n    const classes = className + ' form-control'\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                {...rest}\r\n                name={name}\r\n                id={name} \r\n                className={classes}\r\n            />\r\n            {error && <div className=\"error mt-1\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Input;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        data: { },\r\n        errors: { },\r\n        file: '',\r\n        uploadedFile: {}\r\n    };\r\n    validate = () => {\r\n        const options = { abortEarly: false }\r\n        const { error } = Joi.validate(this.state.data, this.schema, options)\r\n        if(!error) return null;\r\n\r\n        const errors = {};\r\n        for( let item of error.details )\r\n            errors[item.path[0]] = item.message\r\n        return errors\r\n    }\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] }\r\n        const {error} = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if(errors) return;\r\n\r\n        this.doSubmit()\r\n    }\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = {...this.state.errors};\r\n        const data = {...this.state.data};\r\n        data[input.name] = input.value;\r\n        this.setState({ data, errors })\r\n        console.log(this.state.data);\r\n    }\r\n    onChange = (e) => {\r\n        let files = e.target.files;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(files[0]);\r\n\r\n        reader.onload=(e)=>{\r\n            const data = {...this.state.data};\r\n            data['image'] = e.target.result;\r\n            this.setState({ data });\r\n        }\r\n    }\r\n\r\n    renderButton(label, className){\r\n        const classN = className + ' btn btn-primary'\r\n        return(\r\n        <button\r\n            type=\"submit\"\r\n            className={classN}\r\n        >{label}</button>\r\n        )\r\n    } \r\n    renderInput(name, label, type = 'text', className) {\r\n        const { data, errors } = this.state;\r\n\r\n        return (\r\n            <Input \r\n                type={type}\r\n                onChange={this.handleChange}\r\n                name={name} \r\n                label={label} \r\n                value={data[name]} \r\n                error={errors[name]}\r\n                className={className}\r\n            />\r\n        )\r\n    }\r\n    renderUploadImg = () => {\r\n        return (\r\n            <Fragment>\r\n                    <div className=\"custom-file  mt-5\">\r\n                        <input type='file' name=\"img\"  id=\"validatedCustomFile\" onChange={this.onChange}  />\r\n                    </div>\r\n                    {this.state.image ? (\r\n                        <div className='mt-3'>\r\n                            <img id=\"uploaded-img\" src={this.state.image} alt='' />\r\n                        </div>\r\n                    ) : null}\r\n                    {this.state.errors.img && <div className=\"error mt-1\">{this.state.errors.img}</div>}\r\n            </Fragment>\r\n        )\r\n    }\r\n    \r\n}\r\n \r\nexport default Form;\r\n","import http from './httpService';\r\nimport jwtDecode from 'jwt-decode';\r\nconst tokenKey = 'token';\r\nconst apiEndpoint = '/auth';\r\n\r\nhttp.setJwt(getJwt())\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt){\r\n    localStorage.setItem(tokenKey, jwt)\r\n}\r\n\r\nexport function logout(){\r\n    window.localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser(){\r\n    try{\r\n        const jwt = window.localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt)\r\n    }\r\n    catch(ex){\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function getUser(){\r\n    try{\r\n        const { data } = await http.get('users/me');\r\n        return data;\r\n    }\r\n    catch(ex){\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function editProfile(user){\r\n    const { data } = await http.put(apiEndpoint+'/edit', { \r\n        name: user.name,\r\n        email: user.email,\r\n        image: user.image,\r\n        password: user.password\r\n    })\r\n    return data;\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(tokenKey)\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    loginWithJwt,\r\n    editProfile,\r\n    getUser,\r\n    getJwt\r\n}","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\nimport { Redirect, NavLink } from 'react-router-dom';\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data: { username: '', password: '' },\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string().required().min(5).email().label('Username'),\r\n        password: Joi.string().required().min(5).label(\"Password\")\r\n    };\r\n\r\n    doSubmit = async() => {       \r\n        try{\r\n            const { username, password } = this.state.data;\r\n            await auth.login(username, password);\r\n            const { state } = this.props.location;\r\n            window.location = state ? state.from.pathname : \"/jobs\";\r\n        }\r\n        catch(ex){\r\n            if(ex.response && ex.response.status === 400){\r\n                const errors = { ...this.state.errors };\r\n                errors.password = ex.response.data;\r\n                this.setState({ errors })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if(auth.getCurrentUser()) return <Redirect to='/user' />\r\n            return (\r\n            <div className=\"register-login\">\r\n                <div className=\"login-form-primary\">\r\n                    <h1 className=\"primary-text\" id=\"login\">Login</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        {this.renderInput('username', 'Username', 'text', \"login-form-username login-form\")}\r\n                        {this.renderInput('password', 'Password', 'password', \"login-form-password login-form\")}\r\n                        {this.renderButton(\"Login\", \"login-button register-button\")}\r\n                    </form>\r\n                    <NavLink className=\"pass-reset\" to=\"/service-not-available\">Forgot Password?</NavLink>\r\n                </div>\r\n            </div> \r\n            );\r\n    }\r\n}\r\n\r\nexport default LoginForm","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nclass Job extends Component {\r\n    render() {\r\n        let badge_new;\r\n        let badge_featured;\r\n        let language;\r\n        let tool;\r\n        if (this.props.job.new){\r\n            badge_new = <h5 className=\"badge new\">New!</h5>\r\n        }else{\r\n            badge_new = ''\r\n        }\r\n        if (this.props.job.featured){\r\n            badge_featured = <h5 className=\"badge featured\">Featured</h5>\r\n        }else{\r\n            badge_featured = ''\r\n        }\r\n        if(this.props.job.languagesId){\r\n            language = this.props.job.languagesId.map(language => <p className=\"badge-main\" onClick={this.props.onClick} key={language.name}>{language.name}</p>)\r\n        }\r\n        if(this.props.job.toolsId){\r\n            tool = this.props.job.toolsId.map(tool => <p key={tool.name} onClick={this.props.onClick} className=\"badge-main\">{tool.name}</p>)\r\n        }\r\n        return ( \r\n            <React.Fragment>\r\n                <div  className=\"job\">\r\n                        <NavLink to={`/${this.props.job._id}`} className=\"col-1\">\r\n                            <img src={this.props.job.logo} alt=\"logo\" id=\"logo\" />\r\n                        </NavLink>\r\n                        <div className=\"job-main col-6\">\r\n                            <div className=\"job-upper\">\r\n                                <p className=\"company\">{this.props.job.company}</p>\r\n                                <div className=\"badges-1\">\r\n                                    {badge_new}\r\n                                    {badge_featured}\r\n                                </div>\r\n                            </div>\r\n                            <NavLink to={`/${this.props.job._id}`} className=\"job-mid\">\r\n                                <h3 className=\"position\">{this.props.job.position}</h3>\r\n                            </NavLink>\r\n                            <div className=\"job-bot\">\r\n                                <p className=\"common\">{this.props.job.postedAt}</p>\r\n                                <p className=\"point\">•</p>\r\n                                <p className=\"common\">{this.props.job.contract}</p>\r\n                                <p className=\"point\">•</p>\r\n                                <p className=\"common\">{this.props.job.location}</p>\r\n                            </div>\r\n                        </div>\r\n                    <div className=\"badges col-4\">\r\n                        {language}\r\n                        {tool}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );            \r\n    }\r\n}\r\n \r\nexport default Job;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass SearchBar extends Component {\r\n    state = {  }\r\n\r\n    render() { \r\n        let classes;\r\n        if(this.props.items.length < 1) {\r\n            classes = \"none\" \r\n        }else{\r\n            classes = \"searchBar\"\r\n        }\r\n        return ( \r\n            <div className={classes}>\r\n                {this.props.items.map(item => (\r\n                    <div className=\"selected-item row\" key={item}>\r\n                        <h5 className=\"selected-text \">{item}</h5>\r\n                        <button className=\"undo\" onClick={() => this.props.onDelete(item)}><i className=\"fas fa-times\"></i></button>\r\n                    </div>\r\n                ))}\r\n                <button className=\"clear\" onClick={this.props.onClear} >Clear</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SearchBar;","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({postsPerPage, totalPosts, paginate, currentPage}) => {\r\n    const pagesCount = Math.ceil(totalPosts.length / postsPerPage);\r\n    // for(let i = 1; i < Math.ceil(totalPosts.length / postsPerPage); i++){\r\n    //     pageNumbers.push(i);\r\n    // }\r\n    if(pagesCount === 1) return null;\r\n    const pageNumbers = _.range(1, pagesCount + 1);\r\n\r\n    console.log(pageNumbers);\r\n\r\n    return (\r\n        <nav className=\"pagination mb-5\">\r\n            {pageNumbers.map(number => (\r\n                <li key={number} className={ number === currentPage? 'page-item active' : 'page-item'}>\r\n                    <p onClick={() => paginate(number)} current className=\"page-link\">{number}</p>\r\n                </li>\r\n            ))}\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default Pagination;","import React, { Component } from 'react';\r\nimport Job from './job';\r\nimport SearchBar from './searchBar';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Pagination from './pagination';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass JobsTable extends Component {\r\n    state = { \r\n        selected: [],\r\n        currentPage: 1,\r\n        postsPerPage: 2,\r\n    }\r\n\r\n    \r\n\r\n    handleClick = (option) => {\r\n        if(this.state.selected.includes(option.target.innerText)){\r\n          toast.error('Cannot add same item 2 times.')\r\n        }else if(this.state.selected.length >= 5){\r\n          toast.error('Cannot add more than 5 items.')\r\n        }else{\r\n          this.setState({\r\n            selected: this.state.selected.concat([option.target.innerText])\r\n          })\r\n          let data = this.props.data.filter(selected => selected.toolsAndLanguages.includes(option.target.innerText))\r\n          this.setState({data})\r\n        } \r\n    }\r\n    handleDelete = async (item) => {\r\n      const originalSelected = [...this.state.selected];\r\n      const selected = originalSelected.filter(i => i !== item);\r\n      this.setState({selected});\r\n    }\r\n    handleClear = async () => {\r\n      const { data } = this.props.data;\r\n      const selected = [];\r\n      this.setState({selected});\r\n      this.setState({data});\r\n    }\r\n\r\n    paginate = (pageNumber) => {\r\n      this.setState({ currentPage: pageNumber})\r\n    }\r\n    render() { \r\n      const { currentPage, postsPerPage } = this.state;\r\n      const indexOfLastPost = currentPage * postsPerPage;\r\n      const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n      const currentPosts = this.props.data.slice(indexOfFirstPost, indexOfLastPost);\r\n        return ( \r\n        <div className=\"container\">\r\n            <SearchBar items={this.state.selected} onDelete={this.handleDelete} onClear={this.handleClear}/>\r\n            {this.props.user && (\r\n              <NavLink to=\"/create-new-job\" className=\"btn btn-primary mt-5 create-new-job-button\">Create New Job</NavLink>\r\n            )}\r\n            {currentPosts.map(job => (\r\n            <Job job={job} key={job.id} onClick={this.handleClick}/>\r\n            ))}\r\n            <Pagination \r\n              postsPerPage={postsPerPage} \r\n              totalPosts={this.props.data} \r\n              paginate={this.paginate} \r\n              currentPage={currentPage} \r\n            />\r\n        </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default JobsTable;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n \r\nconst NavBar = ({ user }) => {\r\n    return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n      <div className=\"navbar-nav\">\r\n        <NavLink className=\"nav-item nav-link active\" to=\"/jobs\">Jobs <span className=\"sr-only\">(current)</span></NavLink>\r\n        {!user && (\r\n        <React.Fragment>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/login\">Login</NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/register\">Register</NavLink>\r\n        </React.Fragment>\r\n        )}\r\n        {user && (\r\n        <React.Fragment>\r\n          <div class=\"dropdown\">\r\n            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              {user.name}\r\n            </button>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n              <NavLink className=\"nav-item nav-link\" to=\"/user\">Profile</NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/edit\">Edit Profile</NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">Logout</NavLink>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, { Component, Fragment } from 'react';\r\nimport auth from '../services/authService';\r\nimport {NavLink} from 'react-router-dom';\r\nimport ReactLoading from 'react-loading';\r\n\r\nclass Profile extends Component {\r\n    state = { \r\n        user: {},\r\n        loading: true,\r\n     }\r\n    async componentDidMount() {\r\n        const user = await auth.getUser();\r\n        console.log(user);\r\n        this.setState({user});\r\n        this.setState({ loading: false });\r\n    }\r\n    render() { \r\n        const { loading } = this.state;\r\n    \r\n        \r\n        return ( \r\n            <div className=\"container mt-5\">\r\n                {this.state.loading ? (\r\n                    <div className=\"loading-bars\">\r\n                        <ReactLoading type={\"bars\"} color={\"black\"} />\r\n                    </div>\r\n                ) : (\r\n                    <Fragment>\r\n                        <div className=\"img-div\">\r\n                         <img src={this.state.user.image} id=\"profile-img\" alt=\"profile\" />\r\n                        </div>\r\n                        <h1 className=\"sec-text sm m-4\">Name: {this.state.user.name}</h1>\r\n                        <h1 className=\"sec-text sm m-4\">Email: {this.state.user.email}</h1>\r\n                        <NavLink to=\"/edit\" className=\"btn btn-primary ml-4\">Edit Profile</NavLink>\r\n                        <NavLink to=\"/logout\" className=\"btn btn-danger ml-4\">Logout</NavLink>\r\n                    </Fragment>\r\n                )}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Profile;","import { Component } from 'react';\r\nimport auth from '../services/authService'\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        auth.logout()\r\n        window.location = '/jobs';\r\n    }\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;\r\n","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nimport { getJob } from '../services/jobService';\r\nimport ReactLoading from 'react-loading';\r\n\r\nclass Job extends Component {\r\n    state = { \r\n        data: {},\r\n        loading: true\r\n     }\r\n     async componentDidMount() {\r\n         const user = auth.getCurrentUser();\r\n         this.setState({user});\r\n         let {pathname} = this.props.location;\r\n         pathname = pathname.slice(1);\r\n\r\n        const jobId = this.props.match.params.id;\r\n        if(jobId === 'new') return;\r\n        const { data: job } = await getJob(jobId);\r\n        this.setState({ data: this.mapToViewModel(job) })\r\n        this.setState({ loading: false });\r\n    }\r\n    mapToViewModel(job){\r\n        return {\r\n            _id: job._id,\r\n            company: job.company,\r\n            role: job.role,\r\n            contract: job.contract,\r\n            level: job.level,\r\n            logo: job.logo,\r\n            position: job.position,\r\n            toolsAndLanguages: job.toolsAndLanguages\r\n        }\r\n    }\r\n    handleClick = () => {\r\n        this.props.history.replace('/jobs');\r\n    }\r\n    render() { \r\n        const { loading, objectid } = this.state;\r\n    \r\n        \r\n        return ( \r\n            loading ? (\r\n                <div className=\"loading-bars\">\r\n                    <ReactLoading type={\"bars\"} color={\"black\"} />\r\n                </div>\r\n            ) : (\r\n                    <div className=\"m-4\">\r\n                        <div className=\"job-table\">\r\n                            <img src={this.state.data.logo} alt=\"logo\" className=\"m-2\" id=\"get-job-img\"/>\r\n                            <h1 className=\"primary-text m-2\">{this.state.data.company}</h1>\r\n                            <p className=\"sec-text m-2\">Position: {this.state.data.position}</p>\r\n                            <p className=\"sec-text m-2\">Role: {this.state.data.role}</p>\r\n                            <p className=\"sec-text m-2\">Contract: {this.state.data.contract}</p>\r\n                            <p className=\"sec-text m-2 row languages-and-tools\">Languages And Tools:{this.state.data.toolsAndLanguages && (\r\n                            this.state.data.toolsAndLanguages.map(language => (\r\n                                    <p className=\"badge-main m-2\" id=\"page-badges\" onClick={this.handleClick}>{language}</p>\r\n                            )))} </p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n            ))\r\n                    }\r\n}\r\n \r\nexport default Job;","import http from './httpService';\r\n\r\nconst apiEndpoint = '/users';\r\n\r\nfunction register(user) {\r\n\r\n    return http.post(apiEndpoint, {\r\n        email: user.username,\r\n        image: user.image,\r\n        password: user.password,\r\n        name: user.name\r\n    })\r\n}\r\n\r\nexport default {\r\n    register\r\n}","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\nimport userService from '../services/userService';\r\nimport { Redirect  } from 'react-router-dom';\r\n\r\nclass RegisterForm extends Form {\r\n    state = { \r\n        data: { username: '', password: '', name: '', image: '' },\r\n        errors: {},\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string().required().email().label('Username'),\r\n        password: Joi.string().required().min(5).label(\"Password\"),\r\n        image: Joi.string().label('Image'),\r\n        name: Joi.string().required().label(\"Name\")\r\n    }\r\n    \r\n\r\n    doSubmit = async () => {\r\n        try{\r\n            await userService.register(this.state.data)\r\n            this.props.history.push('/login');\r\n        }\r\n        catch(ex){\r\n            if(ex.response){\r\n                const errors = { ...this.state.errors };\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() { \r\n        if(auth.getCurrentUser()) return <Redirect to='/jobs' />\r\n            return (\r\n            <div className=\"register-login\">\r\n                <div className=\"login-form-primary\">\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        {this.renderInput('username', \"Username\", 'text', \"login-form-username login-form\")}\r\n                        {this.renderInput('password', \"Password\", 'password', \"login-form-password login-form\")}\r\n                        {this.renderInput('name', \"Name\", 'text', 'login-form login-form-name')}\r\n                        <label htmlFor=\"image\">Image</label>\r\n                        {this.renderUploadImg()}\r\n                        {this.renderButton('Register', \"login-button register-button mb-5\")}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default RegisterForm","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nimport Joi from 'joi-browser';\r\nimport { toast } from 'react-toastify';\r\nimport ReactLoading from 'react-loading';\r\n\r\nclass EditProfile extends Component {\r\n    state = { \r\n        user: {},\r\n        errors: {},\r\n        loading: true,\r\n    }\r\n    async componentDidMount() {\r\n        const user = await auth.getUser();\r\n        const username = user.name;\r\n        const image = user.image;\r\n        const email = user.email;\r\n        this.setState({user: { name: username, email, image }});\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    schema = {\r\n        email: Joi.string().required().email().label('Email'),\r\n        image: Joi.string().label('Image'),\r\n        password: Joi.string().label('Password'),\r\n        name: Joi.string().required().label(\"Name\")\r\n    }\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false }\r\n        const { error } = Joi.validate(this.state.user, this.schema, options)\r\n        if(!error) return null;\r\n        const errors = {};\r\n        for(let i = 0; i < error.details.length; i++){\r\n            errors[error.details[i].path[0]] = error.details[i].message;\r\n        }\r\n        console.log(errors);\r\n        return errors\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if(errors) return;\r\n\r\n        this.doSubmit()\r\n    }\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const {error} = Joi.validate(obj,schema);\r\n        return error ? error.details[0].message : null\r\n    }\r\n    doSubmit = async () => {\r\n        try{\r\n            console.log(this.state.user);\r\n            await auth.editProfile(this.state.user);\r\n            this.props.history.push('/jobs');\r\n            window.location.reload();\r\n        }\r\n        catch(ex){\r\n            if(ex.response && ex.response.status === 400){\r\n                toast.error('Password Is incorrect')\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    onChange = e => {\r\n        const errors = {...this.state.errors};\r\n        let newValue = e.target.value;\r\n        const user = {...this.state.user}\r\n        user[e.target.name] = newValue;\r\n        this.setState({ user, errors })\r\n        console.log(this.state.user);\r\n    }\r\n\r\n    onFileChange = (e) => {\r\n        let files = e.target.files;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(files[0]);\r\n        reader.onload=(e)=>{\r\n            const user = {...this.state.user};\r\n            user['image'] = e.target.result;\r\n            this.setState({ user });\r\n        }\r\n    }\r\n    render() { \r\n        return (\r\n            <div className=\"container mt-5\">\r\n                {this.state.loading ? (\r\n                    <div className=\"loading-bars\">\r\n                        <ReactLoading type={\"bars\"} color={\"black\"} />\r\n                    </div>\r\n                ) : (\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label className=\"mt-2\" id=\"basic-addon1\">Image</label>\r\n                    <br />\r\n                    <input type=\"file\" name=\"image\" onChange={this.onFileChange} />\r\n                    <img id=\"profile-img\" src={this.state.user.image} alt=\"image\"/>\r\n                    <br />\r\n                    <label className=\"mt-2\" id=\"basic-addon1\">Name</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"name\" onChange={this.onChange} value={this.state.user.name}/>\r\n                    <label className=\"mt-2\" id=\"basic-addon1\">Email</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"email\" disabled value={this.state.user.email}/>\r\n                    <button type=\"button\" class=\"btn btn-primary mt-2 mb-2\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                        Save\r\n                    </button>\r\n                    <div className=\"modal fade show\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Password Verification</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <label className=\"mt-2\">Enter Your Password</label>\r\n                                <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.onChange} />\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                </form>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default EditProfile;","import React, { Component } from 'react';\r\nimport { saveJob } from '../services/jobService';\r\nimport { getLanguages, getTools } from '../services/languageAndtools';\r\nimport Joi from 'joi-browser';\r\nimport Countries from 'countries-api';\r\nimport auth from '../services/authService';\r\nimport axios from 'axios';\r\n\r\n\r\nclass createNewJob extends Component {\r\n    state = {\r\n        languages: [],\r\n        tools: [],\r\n        countries: [],\r\n        data: { \r\n            position: null,\r\n            logo: null, \r\n            company: null,\r\n            role: null, \r\n            contract: null, \r\n            level: null, \r\n            toolsId: [], \r\n            languagesId: [], \r\n            location: null, \r\n        },\r\n        imageUrl: null,\r\n        errors: {}      \r\n    }\r\n\r\n    schema = {\r\n        position: Joi.string().required().label(\"Position\"),\r\n        logo: Joi.any().required().label(\"Company Logo\"),\r\n        company: Joi.string().required().label(\"Company\"),\r\n        role: Joi.string().required().label(\"Role\"),\r\n        contract: Joi.string().required().label(\"Contract\"),\r\n        level: Joi.string().required().label(\"Level\"),\r\n        location: Joi.string().required().label(\"Country\"),\r\n        languagesId: Joi.array().label(\"Languages\"),\r\n        toolsId: Joi.array().label(\"Tools\"),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data: tools } = await getTools();\r\n        const { data: languages } = await getLanguages();\r\n        const { data: countries } = Countries.findAll();\r\n        this.setState({ tools, languages, countries });\r\n    }\r\n\r\n\r\n\r\n    onChangeFile = (e) => {\r\n        let files = e.target.files;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(files[0]);\r\n\r\n        reader.onload=(e)=>{\r\n            const data = {...this.state.data};\r\n            data['logo'] = e.target.result;\r\n            this.setState({ data });\r\n        }\r\n    }\r\n    handleSelectLanguage = (e) => {\r\n        const language = e.target.innerText;\r\n        let data = this.state.data;\r\n        const languageId = this.state.languages.find(lan => lan.name === language);\r\n        if(!data['languagesId'].includes(languageId._id)){\r\n            data['languagesId'] = data.languagesId.concat(languageId._id);\r\n        }else{\r\n            data['languagesId'] = data.languagesId.filter(l => languageId._id !== l);\r\n        }\r\n        console.log(this.state.data.languagesId);\r\n        this.setState({ data });\r\n    }\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false };\r\n        const result = Joi.validate(this.state.data, this.schema, options);\r\n        if (!result.error) return null; \r\n        const errors = {};\r\n            for (let item of result.error.details) errors[item.path[0]] = item.message; //in details array, there are 2 properties,path and message.path is the name of the input, message is the error message for that input.\r\n        return errors;\r\n    };\r\n    \r\n    onValueChange = (e) => {\r\n        const data = {...this.state.data};\r\n        \r\n        data[e.target.name] = e.target.value;\r\n        const error = this.validate();\r\n        this.setState({errors: error});\r\n        this.setState({data});\r\n    }\r\n\r\n    \r\n    handleSelectTool = (e) => {\r\n        const tool = e.target.innerText;\r\n        let data = this.state.data;\r\n        const toolId = this.state.tools.find(to => to.name === tool);\r\n        if(!data['toolsId'].includes(toolId._id)){\r\n            data['toolsId'] = data.toolsId.concat(toolId._id);\r\n        }else{\r\n            data['toolsId'] = data.toolsId.filter(l => toolId._id !== l._id);\r\n        }\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const data = { ...this.state.data };\r\n        data[\"location\"] = e.target.value;\r\n        this.setState({ data })\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        console.log(errors);\r\n        console.log(this.state.data);\r\n        if (errors) return;\r\n\r\n        this.Submit()\r\n    }\r\n    Submit = async () => {\r\n        try{\r\n            const data = await saveJob(this.state.data);\r\n            console.log(data);\r\n        }\r\n        catch(ex){\r\n            if(ex.response){\r\n                console.log(ex.response);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const { errors, data } = this.state;\r\n        if(auth.getCurrentUser()){\r\n            return(\r\n            <div className=\"container new-job mt-5 mb-5\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label className=\"col-form-label\">Position</label>\r\n                    <input type=\"text\" onChange={this.onValueChange} name=\"position\" className=\"form-control\" />\r\n                    {errors.position && <div className=\"error mt-1\">{errors.position}</div>}\r\n                        <label className=\"col-form-label\">Company Logo</label>\r\n                    <div className=\"custom-file  mt-2\">\r\n                        <input type='file' name=\"img\"  id=\"validatedCustomFile\" onChange={this.onChangeFile}  />\r\n                    </div>\r\n                    {this.state.image ? (\r\n                        <div className='mt-3'>\r\n                            <img id=\"uploaded-img\" src={this.state.image} alt='' />\r\n                        </div>\r\n                    ) : null}\r\n                    <label className=\"col-form-label mt-4\">Company</label>\r\n                    <input type=\"text\" onChange={this.onValueChange} name=\"company\" className=\"form-control\"/> \r\n                    {errors.company && <div className=\"error mt-1\">{errors.company}</div>}\r\n                    <label className=\"col-form-label\">Role</label>\r\n                    <input type=\"text\" onChange={this.onValueChange} name=\"role\" className=\"form-control\" />\r\n                    {errors.role && <div className=\"error mt-1\">{errors.role}</div>}\r\n                    <label className=\"col-form-label\">Contract</label>\r\n                    <input type=\"text\" onChange={this.onValueChange} name=\"contract\" className=\"form-control\" />\r\n                    {errors.contract && <div className=\"error mt-1\">{errors.contract}</div>}\r\n                    <label className=\"col-form-label\">Level</label>\r\n                    <input type=\"text\" onChange={this.onValueChange} name=\"level\" className=\"form-control\" />\r\n                    {errors.level && <div className=\"error mt-1\">{errors.level}</div>}\r\n                    <select onChange={this.handleChange}class=\"custom-select mt-3\">\r\n                        <option selected disabled>Select Country</option>\r\n                        <option>Global</option>\r\n                        {this.state.countries.map(country => (\r\n                            <option value={country.name.official}>{country.name.official}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <label className=\"col-form-label mt-4\">Languages</label>\r\n                        {this.state.languages.map( language => (    \r\n                        <div class=\"custom-control custom-checkbox ml-3\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id={this.state.languages.indexOf(language)}/>\r\n                                <label class=\"custom-control-label\" onClick={this.handleSelectLanguage} for={this.state.languages.indexOf(language)}>{language.name}</label>\r\n                        </div>\r\n                        ))}\r\n                    <label className=\"col-form-label mt-4\">Tools</label>\r\n                        {this.state.tools.map( tool => \r\n                        (    \r\n                        <div class=\"custom-control custom-checkbox ml-3\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id={this.state.tools.indexOf(tool) + 100}/>\r\n                                <label class=\"custom-control-label\" onClick={this.handleSelectTool} for={this.state.tools.indexOf(tool) + 100}>{tool.name}</label>\r\n                        </div>\r\n                        ))}\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-3\"/>\r\n                </form>\r\n            </div>\r\n         );\r\n        }else{\r\n            window.location = '/not-found';\r\n        }\r\n    }\r\n}\r\n \r\nexport default createNewJob;","import http from './httpService';\r\n\r\n\r\nconst lanEndpoint = '/languages';\r\nconst toolEnpoint = '/tools'\r\n\r\n\r\nexport function getTools() {\r\n    return http.get(toolEnpoint);\r\n}\r\n\r\n\r\n\r\nexport function getLanguages() {\r\n    return http.get(lanEndpoint);\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nclass UploadImgTest extends Component {\r\n    state = {\r\n        image: '',\r\n    }\r\n\r\n    onChange = (e) => {\r\n        e.preventDefault()\r\n        let files = e.target.files;\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(files[0]);\r\n\r\n        reader.onload=(e)=>{\r\n            console.warn('img data', e.target.result)\r\n            this.setState({image: e.target.result});\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <form className=\"svp\" enctype=\"multipart/form-data\">\r\n                    <div className=\"custom-file mb-4 mt-5\">\r\n                        <input type='file' name=\"img\" id=\"validatedCustomFile\"  onChange={this.onChange}  />\r\n                        <button onClick={this.onSubmit} id=\"customFile\" className=\"btn btn-primary btn-block mt-2\">Submit</button>\r\n                    </div>\r\n                    {this.state.image ? (\r\n                        <div className='mt-1'>\r\n                            <img id=\"uploaded-img\" src={this.state.image} alt='' />\r\n                        </div>\r\n                    ) : null}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n \r\nexport default UploadImgTest;","import React from 'react';\r\n\r\nconst ServiceNotAvailable = (props) => {\r\n    const handleClick = () => {\r\n        props.history.goBack();\r\n\r\n    }\r\n    return (\r\n        <div className=\"col text-center\">\r\n            <h1 className=\"error-text\">Service not Available yet</h1>\r\n            <button className=\"btn btn-primary text-center\" onClick={handleClick}>Go Back</button>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ServiceNotAvailable;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <h1 className=\"error-text\">404 Error Page Not Found</h1> \r\n    );\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\nimport './App.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { getJobs } from './services/jobService'; \nimport LoginForm from './components/loginForm';\nimport JobsTable from './components/jobsTable';\nimport NavBar from './components/navBar';\nimport Profile from './components/profile';\nimport Logout from './components/logout';\nimport Job from './components/getJob';\nimport RegisterForm from './components/registerForm';\nimport EditProfile from './components/editProfile';\nimport createNewJob from './components/createNewJob';\nimport UploadImgTest from './components/UploadImgTest';\nimport ServiceNotAvailable from './components/serviceNotAvailable';\nimport NotFound from './components/NotFound';\nimport auth from './services/authService';\nimport ReactLoading from 'react-loading';\nimport dotenv from 'dotenv';\n\ndotenv.config()\n\nclass App extends Component {\n  state = { \n    data: [],\n    loading: true\n   }\n\n   async componentDidMount() {\n     const { data } = await getJobs();\n     this.setState({data})\n     const user = await auth.getUser();\n     this.setState({user});\n     this.setState({ loading: false });\n   }\n  \n  render() { \n    const { data, user } = this.state;\n    return (\n      <React.Fragment>\n        {this.state.loading ? (\n          <div className=\"loading-bars\">\n            <ReactLoading type={\"bars\"} color={\"black\"} />\n          </div>\n        ) : (\n          <React.Fragment>\n          <NavBar user={user}/>\n          <div className=\"bg\"></div>\n          <ToastContainer />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/register\" component={RegisterForm} />\n              <Route path=\"/login\" component={LoginForm} />\n              <Route path=\"/jobs\" render={props => <JobsTable {...props} data={data} user={user}/>} />\n              <Route path=\"/user\" component={Profile} />\n              <Route path=\"/logout\" component={Logout} />\n              <Route path=\"/edit\" component={EditProfile} />\n              <Route path=\"/service-not-available\" component={ServiceNotAvailable} />\n              <Route path=\"/create-new-job\" component={createNewJob} />\n              <Route path=\"/not-found\" component={NotFound}/>\n              <Route path=\"/test\" component={UploadImgTest} />\n              <Route path=\"/:id\" component={Job}/>\n              <Redirect from=\"/\" exact to=\"/jobs\" />\n              <Redirect to=\"/not-found\"/>\n            </Switch>\n          </div> \n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n \nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}